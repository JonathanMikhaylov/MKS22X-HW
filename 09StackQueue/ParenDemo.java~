public class ParenDemo {

    public static boolean isMatching(String n) {
	MyStack<String> S = new MyStack<String>();
	for(int i = 0; i < n.length(); i++){
	    String a = n.substring(i, i+1);
	   
	    if(a.equals("[") || a.equals("{") || a.equals("(") || a.equals("<")) {
		S.push(a);
	    } else if(a.equals("]") || a.equals("}") || a.equals(")") || a.equals(">")) {
		if(S.isEmpty()){
		    return false;
		}
		
		String b = S.pop();
		if( !matchingParens(b , a)) {
		    return false;
		}
	    } else {
	    
	    }
	}
	return S.isEmpty();
    }

    public static boolean matchingParens(String a, String b) {
	return ((a.equals("(") && b.equals(")")) ||
		(a.equals("{") && b.equals("}")) ||
		(a.equals("[") && b.equals("]")) ||
		(a.equals("<") && b.equals(">")));
    }
 
   public static void main(String[]args) {
       String input = "()()(([[]]))";
       if(args.length > 0) {
	   input = args[0];
	   System.out.println( isMatching(input)); 
       } else {
	   System.out.println("Usage:"); 
	   System.out.println("java ParenDemo \"text\""); 
       }

       System.out.println( isMatching("[ ( { } ) ]"));
       System.out.println( isMatching("[FISHIES]"));
       System.out.println( isMatching("[FISHIES][][][]"));
       System.out.println( isMatching("()"));
    }
}